<#      
// Se repite por cada tabla en la base de datos
string tableName = Configuration.TableName;
#> 
using FluentValidation;

namespace Api.Endpoints.<#= tableName #>.Request.Create
{
    public class <#= tableName #>RequestCreateValidator : AbstractValidator<<#= tableName #>RequestCreate>
    {
        public <#= tableName #>RequestCreateValidator()
        {
<# 
    // Se repite por cada columna de la tabla (NO ForeingKey) - Se excluye la PK
    foreach(string columnName in Configuration.MSSQL.GetRepeatersColumns(tableName, true))
    {
        InformationSchemaColumns informationSchemaColumn =  Configuration.MSSQL.GetMetadataByTableNameAndColumnName(tableName, columnName);
#>

            RuleFor(m => m.<#= informationSchemaColumn.COLUMN_NAME #>)
                <#= informationSchemaColumn.IS_NULLABLE ? string.Empty : $".NotEmpty().WithMessage(\"'{informationSchemaColumn.COLUMN_NAME} is required.\")" #><#       
        if (informationSchemaColumn.CHARACTER_MAXIMUM_LENGTH > 0)
        {
#>.MaximumLength(<#= informationSchemaColumn.CHARACTER_MAXIMUM_LENGTH #>)<#       
            }#>;
<#
    }
    // Se repite por cada ForeingKey de la tabla
    foreach(InformationSchemaColumns informationSchemaColumn in Configuration.MSSQL.GetRepeatersReferencedTablesInformationFromThis(tableName, Configuration.ExcludedClasses))
    {
#>
            
            RuleFor(m => m.<#= informationSchemaColumn.COLUMN_NAME #>)<# 
#>
<#= informationSchemaColumn.IS_NULLABLE ? string.Empty : $".NotEmpty().WithMessage(\"'{informationSchemaColumn.COLUMN_NAME} is required.\")" #>;

<#      
    }
#>
        }
    }
}

<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="T4CodeGenerator.MSSQL2CSHARP.Database" #>
<#@ import namespace="T4CodeGenerator.MSSQL2CSHARP.Helpers" #>
