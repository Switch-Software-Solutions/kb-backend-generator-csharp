<#      
// Se repite por cada tabla en la base de datos
string tableName = Configuration.TableName;
#> 

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;

namespace Core.Models
{
    public partial class <#= tableName #>
    {  
<# 
    // Se repite por cada columna de la tabla (NO ForeingKey)
    foreach(string columnName in Configuration.MSSQL.GetRepeatersColumns(tableName))
    {
        InformationSchemaColumns informationSchemaColumn = Configuration.MSSQL.GetMetadataByTableNameAndColumnName(tableName, columnName);
#>
        public <#= Configuration.MSSQL.DataTypeMapping(informationSchemaColumn.DATA_TYPE) #><#= informationSchemaColumn.IS_NULLABLE ? "?" : string.Empty #> <#= informationSchemaColumn.COLUMN_NAME #> { get; set; }
<#  
    }
    // Se repite por cada ForeingKey de la tabla
    foreach(InformationSchemaColumns informationSchemaColumn in Configuration.MSSQL.GetRepeatersReferencedTablesInformationFromThis(tableName, Configuration.ExcludedClasses))
    {
#>
        public <#= Configuration.MSSQL.DataTypeMapping(informationSchemaColumn.DATA_TYPE) #><#= informationSchemaColumn.IS_NULLABLE ? "?" : string.Empty #> <#= informationSchemaColumn.COLUMN_NAME #> { get; set; }
        public <#= informationSchemaColumn.REFERENCED_TABLE_NAME #> <#= Utils.RemoveId(informationSchemaColumn.COLUMN_NAME) #>  { get; set; }
<#       
    }

    List<InformationSchemaColumns> informationSchemaColumnList = Configuration.MSSQL.GetRepeatersReferencedTablesNamesToThis(tableName, Configuration.ExcludedClasses);

    // Se repite por cada tabla que hace referencia a esta tabla
    foreach(InformationSchemaColumns informationSchemaColumn in informationSchemaColumnList)
    {
        // Las referencias a la misma tabla no se manejan como colecciones
        if (informationSchemaColumn.PARENT_TABLE_NAME != informationSchemaColumn.REFERENCED_TABLE_NAME) 
        {
            if (informationSchemaColumnList.FindAll(isc => isc.TABLE_NAME == informationSchemaColumn.TABLE_NAME).Count() > 1) 
            {
#>
        public ICollection<<#= informationSchemaColumn.TABLE_NAME #>> <#= Utils.RemoveId(informationSchemaColumn.COLUMN_NAME) #>Collection { get; set; } 
<#    
            }
            else 
            {
#>
        public ICollection<<#= informationSchemaColumn.TABLE_NAME #>> <#= informationSchemaColumn.TABLE_NAME #>Collection { get; set; }
<# 
            }    
        }  
    }
#>
    }
}     

<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="T4CodeGenerator.MSSQL2CSHARP.Database" #>
<#@ import namespace="T4CodeGenerator.MSSQL2CSHARP.Helpers" #>
